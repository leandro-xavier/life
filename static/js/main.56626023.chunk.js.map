{"version":3,"sources":["components/components/Navigation/Navigation.js","firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadProduct.js","helpers/loadAllProduct.js","actions/product.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/screens/Product/ImaUpload.js","components/screens/Product/ImaUpdate.js","components/screens/Product/ListOneProduct.js","components/screens/Product/ListMyProduct.js","components/screens/dashboard/DashboardScreen.js","components/screens/allPicture/AllPicture.js","routers/PublicRoute.js","components/screens/auth/login/LoginScreen.js","components/screens/auth/register/RegisterScreen.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/productReducer.js","store/store.js","reducers/authReducer.js","App.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","className","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","googleAuthProvider","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadProduct","uid","getDocs","collection","productsSnap","products","forEach","snapHijo","push","data","loadAllProduct","doc","startNewProductNewVersion","values","dispatch","getState","auth","url","title","description","allProduct","addDoc","docRef","activeProduct","addNewProduct","Swal","fire","type","payload","product","setProduct","deleteProduct","addUrl","setAllProduct","refreshProduct","setError","err","finishLoading","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","displayName","catch","e","photoURL","logout","useForm","initialState","useState","setValues","reset","handleInputChange","target","name","value","ImaUpload","useDispatch","show","setShow","formValues","handleSubmit","preventDefault","Button","onClick","Modal","onHide","animation","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","files","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","ImaUpdate","useSelector","state","formImaValues","handleInputUpdate","activeId","useRef","useEffect","current","productToFirestore","upIma","updateDoc","ListOneProduct","Card","Img","src","Text","deleteDoc","startDeleting","ListMyProduct","map","dato","DashboardScreen","Figure","Image","width","height","alt","Offcanvas","signOut","AllPicture","FormControl","PublicRoute","isAuthenticated","Component","component","rest","props","protoTypes","PropTypes","bool","isRequired","func","LoginScreen","loading","ui","disabled","signInWithPopup","RegisterScreen","error","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","startRegisterWithEmailPasswordName","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","Spinner","size","role","path","exact","allProducts","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56626023.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Navbar, Container, Nav} from 'react-bootstrap';\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n              <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">Life</Navbar.Brand>\r\n                  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                      <Nav.Link as={Link} to=\"/\">explore</Nav.Link>\r\n                      <Nav.Link as={Link} to=\"/dashboard\">Dashboard</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                      <Nav.Link as={Link} to=\"/auth/login\">Login</Nav.Link>\r\n                      <Nav.Link as={Link} to=\"/auth/register\">Register</Nav.Link>\r\n                    </Nav>\r\n                  </Navbar.Collapse>\r\n              </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n","import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCCZRsw1BIsqk_UTBr-4RuOHOl7z4q03Rk\",\r\n    authDomain: \"lifeapp-db6db.firebaseapp.com\",\r\n    projectId: \"lifeapp-db6db\",\r\n    storageBucket: \"lifeapp-db6db.appspot.com\",\r\n    messagingSenderId: \"815973988506\",\r\n    appId: \"1:815973988506:web:2dd1f5b7bf1c48ab540723\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    app\r\n}","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    productsAddNew: '[Products] New product',\r\n    productsActive: '[Products] Set active product',\r\n    productsLoad: '[Products] Load products',\r\n    productsUpdated: '[Products] Updated product',\r\n    productsFileUrl: '[Products] Updated image url',\r\n    productsDelete: '[Products] Delete product',\r\n    productsLogoutCleaning: '[Products] Logout Cleaning',\r\n    addUrl: '[Products] Add Url',\r\n\r\n    productsAllLoad: '[Products] all product Load'\r\n}","export const fileUpload = async(file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/universidad-latina-de-panama/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}","import { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase/firebase-config';\r\n\r\nexport const loadProduct = async(uid) => {\r\n\r\n    const productsSnap = await getDocs(collection(db, `${uid}/life/product`));\r\n\r\n    const products = [];\r\n\r\n    productsSnap.forEach(snapHijo => {\r\n        products.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n        console.log(products);\r\n    })\r\n\r\n\r\n    return products;\r\n\r\n}","import { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase/firebase-config';\r\n\r\nexport const loadAllProduct = async() => {\r\n\r\n    const productsSnap = await getDocs(collection(db, \"app\"));\r\n\r\n    const products = [];\r\n\r\n    productsSnap.forEach((doc) => {\r\n\r\n        //    products.push({\r\n        //      id: doc.id,\r\n        //    ...doc.data()\r\n        // })\r\n        //console.log(products);\r\n\r\n        console.log(doc.id, \"=>\", doc.data());\r\n    })\r\n\r\n    return products;\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { collection, addDoc, doc, updateDoc, deleteDoc } from 'firebase/firestore'\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadProduct } from \"../helpers/loadProduct\";\r\nimport { types } from \"../types/types\";\r\nimport { loadAllProduct } from \"../helpers/loadAllProduct\";\r\n\r\n\r\nexport const startNewProductNewVersion = (values) => {\r\n    return async(dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        const { url } = getState().products;\r\n        const { title, description } = values\r\n        console.log(url);\r\n\r\n        const allProduct = {\r\n            title: title,\r\n            description: description,\r\n            url: url\r\n\r\n        }\r\n\r\n        try {\r\n            const docRef = await addDoc(collection(db, `${uid}/life/product`), allProduct)\r\n            dispatch(activeProduct(docRef.id, allProduct))\r\n            dispatch(addNewProduct(docRef.id, allProduct));\r\n\r\n\r\n            console.log(\"document\", docRef);\r\n            Swal.fire('Excelente', 'Producto creado con éxito', 'success')\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const activeProduct = (id, products) => ({\r\n    type: types.productsActive,\r\n    payload: {\r\n        id,\r\n        ...products\r\n    }\r\n})\r\n\r\nexport const addNewProduct = (id, product) => ({\r\n    type: types.productsAddNew,\r\n    payload: {\r\n        id,\r\n        ...product\r\n    }\r\n})\r\n\r\nexport const startLoadingProducts = (uid) => {\r\n    return async(dispatch) => {\r\n        const products = await loadProduct(uid)\r\n        dispatch(setProduct(products))\r\n    }\r\n}\r\n\r\nexport const setProduct = (products) => ({\r\n    type: types.productsLoad,\r\n    payload: products\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const { active: activeProduct } = getState().products;\r\n        const { uid } = getState().auth;\r\n        Swal.fire({\r\n            title: 'Uploading',\r\n            text: 'Please wait',\r\n            allowOutsideClick: 'false',\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload(file)\r\n\r\n        console.log(fileUrl);\r\n        //activeProduct.url = fileUrl;\r\n        // console.log(activeProduct.url);\r\n        dispatch(addUrl(fileUrl))\r\n\r\n        Swal.close()\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        await deleteDoc(doc(db, uid, \"life\", \"product\", id))\r\n\r\n\r\n        dispatch(deleteProduct(id));\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => ({\r\n    type: types.productsDelete,\r\n    payload: id\r\n})\r\n\r\nexport const productLogout = () => ({\r\n    type: types.productsLogoutCleaning\r\n})\r\n\r\n\r\nexport const addUrl = (url) => ({\r\n    type: types.addUrl,\r\n    payload: url\r\n})\r\n\r\n\r\n//activar todas las notas\r\n\r\nexport const startLoadingAllProducts = () => {\r\n    return async(dispatch) => {\r\n        const products = await loadAllProduct()\r\n        dispatch(setAllProduct(products))\r\n    }\r\n}\r\n\r\nexport const setAllProduct = (products) => ({\r\n    type: types.productsAllLoad,\r\n    payload: products\r\n})\r\n\r\nexport const startUpdateProduct = (product) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!product.url) {\r\n            delete product.url;\r\n        }\r\n\r\n        const productToFirestore = {...product };\r\n        delete productToFirestore.id;\r\n\r\n        console.log(productToFirestore);\r\n\r\n        const upIma = doc(db, `${uid}/life/product/${product.id}`);\r\n\r\n        await updateDoc(upIma, productToFirestore)\r\n        Swal.fire('Success', \"producto actualizado\", \"success\")\r\n\r\n        dispatch(refreshProduct(product.id, productToFirestore))\r\n            //  Swal.fire('Saved', product.title, 'success')\r\n    }\r\n}\r\n\r\nexport const refreshProduct = (id, product) => ({\r\n    type: types.productsUpdated,\r\n    payload: {\r\n        id,\r\n        product: {\r\n            id,\r\n            ...product\r\n        }\r\n    }\r\n})","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { getAuth, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\";\r\nimport { productLogout } from './product';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading())\r\n\r\n        const auth = getAuth()\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({ user }) => {\r\n                dispatch(finishLoading())\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading())\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        const auth = getAuth()\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(({ user }) => {\r\n                //await user.updateProfile({ displayName: name })\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        const auth = getAuth()\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName, user.photoURL)\r\n                )\r\n                console.log(user);\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName, photoURL) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName,\r\n            photoURL\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        const auth = getAuth()\r\n        await signOut(auth)\r\n        dispatch(logout())\r\n        dispatch(productLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React, {  useState } from 'react';\r\nimport { Modal, Button, Form} from 'react-bootstrap';\r\nimport { useDispatch} from 'react-redux';\r\nimport { startNewProductNewVersion, startUploading } from '../../../actions/product';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport './imaUpload.css'\r\n\r\nexport const ImaUpload = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [formValues, handleInputChange] = useForm({});\r\n\r\n    const {title, description } = formValues;\r\n\r\n   const handleSubmit = async(e) => {\r\n       e.preventDefault()\r\n        dispatch(startNewProductNewVersion(formValues))\r\n   }\r\n\r\n   const handleSubmitImage = (e) => {\r\n    e.preventDefault()\r\n    const file = e.target.files[0];\r\n\r\n    if(file ){\r\n        dispatch(startUploading(file))\r\n    }else{\r\n        console.log('error')\r\n    }\r\n   }\r\n \r\n    return (\r\n        <>\r\n        \r\n            <Button className='boton' variant=\"success\" onClick={handleShow }><i className=\"fas fa-upload data\"></i></Button>\r\n                <Modal show={show} onHide={handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Sube tu imagen</Modal.Title>\r\n                        </Modal.Header>\r\n                            <Modal.Body>\r\n                            <Form onSubmit={handleSubmit}>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formFile\">\r\n                                    <Form.Label>Imagen</Form.Label>\r\n                                    <Form.Control type=\"file\" placeholder=\"Enter\" name='file' onChange={handleSubmitImage}/>\r\n                                </Form.Group>\r\n\r\n                                \r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Titulo</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter title\" name='title' value={title} onChange={handleInputChange}/>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Descripcion</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter description\" name='description' value={description} onChange={handleInputChange}/>\r\n                            \r\n                                </Form.Group>\r\n\r\n                                <Button variant=\"secondary\" type=\"submit\">\r\n                                    save\r\n                                </Button>\r\n                    \r\n                            </Form>\r\n                            </Modal.Body>\r\n                </Modal>\r\n        </>\r\n    );\r\n    \r\n}\r\n","import React, { useState } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Button, Modal, Form, } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeProduct, startUpdateProduct } from '../../../actions/product';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport './imaupdate.css'\r\n\r\nexport const ImaUpdate = () => {\r\n    const dispatch = useDispatch()\r\n    const {active} = useSelector(state => state.products)\r\n    const [show, setShow] = useState(false);\r\n  //  const {id, title, url, description} = active\r\n\r\n   \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    \r\n\r\n   const [formImaValues, handleInputUpdate, reset] = useForm(active);\r\n\r\n    const {title, description} = formImaValues;\r\n\r\n    const activeId = useRef(active.id)\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault()\r\n        console.log(title, description)\r\n    // dispatch(startUpdateProduct(formImaValues))\r\n}\r\n\r\nuseEffect(() => {\r\n  if(active.id !== activeId.current){\r\n      reset(active);\r\n      activeId.current = active.id\r\n  }\r\n}, [active, reset])\r\n\r\nuseEffect(() => {\r\n    dispatch(activeProduct(formImaValues.id, {...formImaValues}))\r\n}, [formImaValues, dispatch])\r\n\r\n\r\nconst handleSave = () => {\r\n    dispatch(startUpdateProduct(active))\r\n}\r\n    return (\r\n\r\n    <>\r\n       <Button className=\"boton\" variant=\"success\" onClick={handleShow }><i className=\"fas fa-edit\"></i></Button>\r\n                <Modal show={show} onHide={handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Actualizar</Modal.Title>\r\n                        </Modal.Header>\r\n                            <Modal.Body>\r\n                            <Form onSubmit={handleUpdate}>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formFile\">\r\n                                    <Form.Label>Imagen</Form.Label>\r\n                                 {/*<Form.Control type=\"file\" placeholder=\"Enter\" name='file' value={url} onChange={handleInputUpdate}/> */}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEm\">\r\n                                    <Form.Label>Nuevo Titulo</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder={active.title} name='title' value={title} onChange={handleInputUpdate} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group className=\"mb-3\" controlId=\"formBasic\">\r\n                                    <Form.Label>Nueva Descripcion</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter title\" name='description' value={description} onChange={handleInputUpdate}/>\r\n                                </Form.Group>\r\n                    \r\n                                <Button variant=\"success\" onClick={handleSave}>\r\n                                    Guardar\r\n                                </Button>\r\n                            </Form>\r\n                            </Modal.Body>\r\n                </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport { activeProduct, startDeleting, startUpdateProduct } from '../../../actions/product';\r\nimport { ImaUpdate } from './ImaUpdate';\r\nimport './listoneproduct.css'\r\n\r\nexport const ListOneProduct = ({id, description, title , url}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = (e) => {\r\n        e.preventDefault()\r\n        dispatch(activeProduct(id,{\r\n            title,description\r\n        }))\r\n     \r\n    }\r\n    \r\n    const handleDelete = () => {\r\n         dispatch(startDeleting(id))\r\n }\r\n\r\n    return (\r\n        <div onClick={handleEntryClick} className='container-1'>\r\n               <Card className='card-my' key={id}>\r\n                    <Card.Img className='card-ima' variant=\"top\" src={url} />\r\n                    <Card.Body>\r\n                       <Card.Title>{title}</Card.Title>\r\n                        <Card.Text>{description}</Card.Text>\r\n                        <Button className='boton' variant='danger' onClick={handleDelete}><i className='fas fa-trash'></i></Button>\r\n\r\n                        <ImaUpdate\r\n                        id={id}\r\n                        title={title}\r\n                        description={description}\r\n                        url={url}\r\n                        />\r\n                    </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './listMyProduct.css'\r\nimport { ListOneProduct } from './ListOneProduct';\r\n\r\nexport const ListMyProduct = () => {\r\n\r\n    const {products} = useSelector(state => state.products);\r\n \r\n    return (\r\n        <div className=\"pointer\" >\r\n            {\r\n                products.map(dato => (\r\n                    <ListOneProduct\r\n                    key={dato.id}\r\n                    {...dato}\r\n                    />\r\n                ))\r\n                \r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nimport {Button, Offcanvas} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { startLogout } from '../../../actions/auth';\r\nimport { ImaUpload } from '../Product/ImaUpload';\r\nimport { ListMyProduct } from '../Product/ListMyProduct';\r\nimport { Figure } from 'react-bootstrap';\r\nimport './dashboard.css'\r\n\r\nexport const DashboardScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    const {name, photoURL} = useSelector(state => state.auth);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='h1'>Profile</h1>\r\n            <Button variant=\"dark\" onClick={handleShow}>\r\n            <i className=\"fas fa-chevron-circle-down icon\"></i>\r\n            </Button>\r\n            <div className='container-1'>\r\n            <Figure><Figure.Image  className='figure' width={150} height={150} alt=\"171x180\" src={photoURL}/></Figure>\r\n            </div>\r\n            <h3 className='md-4 h3'>{name}</h3>\r\n            <div>\r\n                <ListMyProduct/>     \r\n            </div>\r\n\r\n            <Offcanvas show={show} onHide={handleClose}>\r\n                <Offcanvas.Header closeButton>\r\n                <Offcanvas.Title>Menu</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                    <Offcanvas.Body>\r\n                    <Button variant=\"danger\" onClick={handleLogout}>\r\n                     logout\r\n                    </Button>\r\n                    <div>\r\n                        <ImaUpload/>\r\n                </div>\r\n                    </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Card, Button, Form, FormControl} from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport './allpicture.css'\r\n\r\nexport const AllPicture = () => {\r\n    \r\n    const {products} = useSelector(state => state.products)\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h1 className='h1'>LIFE</h1>\r\n            </div>\r\n            <div className='buscador'>\r\n                <Form className=\"d-flex form\">\r\n                <Button variant=\"outline-danger boton\">Search</Button>\r\n                    <FormControl\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    className=\"me-2\"\r\n                    aria-label=\"Search\"\r\n                    />\r\n                </Form>\r\n            </div>\r\n\r\n            <div className='cards'>\r\n                {\r\n                products.map(dato => (\r\n                <Card className='card'>\r\n                    <Card.Title className=\"titulo\">{dato.title}</Card.Title>\r\n                    <Card.Body>\r\n                    <Card.Img variant=\"top\" src={dato.url} />\r\n                    \r\n                        <Card.Text>{dato.description}</Card.Text>\r\n                        <Button className='boton-dos' variant=\"secondary\">imagen</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n                ))\r\n                \r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect, Route} from 'react-router-dom'\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated, \r\n    component: Component,\r\n    ...rest \r\n    } ) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest} component={props => (\r\n            (isAuthenticated)\r\n             ? (<Redirect to=\"life/dashboard\"/>)\r\n             : (<Component {...props} />)\r\n        ) }\r\n        />    \r\n    )\r\n}\r\n\r\n\r\nPublicRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Nav} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../../../actions/auth';\r\nimport { useForm } from '../../../../hooks/useForm';\r\nimport './login.css'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const {loading} = useSelector(state => state.ui)\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: '',\r\n    password: ''\r\n  })\r\n\r\nconst {email, password} = formValues;\r\n\r\nconst handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password))\r\n}\r\n\r\nconst handleGoogleLogin = () => {\r\n  dispatch(startGoogleLogin())\r\n}\r\n\r\n    return (\r\n        <div className='container-1'>\r\n            <Form onSubmit={handleLogin} className=\"container-2\">\r\n            <h1>Login</h1>\r\n              <Form.Group className=\"mb-3 group\" controlId=\"formBasicEmail\">\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={email} onChange={handleInputChange} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 group\" controlId=\"formBasicPassword\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={handleInputChange}/>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Button className='boton-login' variant=\"secondary\" type=\"submit\" disabled={loading}>Login</Button>\r\n                  <Form.Label className=\"Label\">Or</Form.Label>\r\n                <Button className='boton-login' variant=\"danger\" onClick={handleGoogleLogin}> Continua con  <i className=\"fab fa-google-plus-g\"></i></Button>\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n              <Form.Label className=\"Label\">aun no tienes cuenta? <Nav.Link as={Link} to=\"/auth/register\">Registrate</Nav.Link> </Form.Label>\r\n              </Form.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {useForm} from '../../../../hooks/useForm';\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../../../actions/auth';\r\nimport './register.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {msgError} = useSelector(error => error.ui)\r\n\r\n   const [formValues, handleSubmit] = useForm({\r\n     name: \"\",\r\n     email: \"\",\r\n     password: \"\",\r\n     password2: \"\"\r\n   })\r\n\r\n   const {name, email, password, password2} = formValues;\r\n\r\n   const handleRegister = (e) => {\r\n     e.preventDefault()\r\n    \r\n    if(isFormValid()){\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n    }\r\n\r\n   }\r\n\r\n   const isFormValid = () => {\r\n\r\n    if(name.trim().length === 0){\r\n      dispatch(setError(\"ingresar nombre\"))\r\n      Swal.fire('Error', \"Debes ingresar un nombre\", \"error\")\r\n      return false\r\n    }else if(!validator.isEmail(email)){\r\n      dispatch(setError(\"email incorrecto\"))\r\n      Swal.fire('Error', \"email incorrecto\", \"error\")\r\n      return false\r\n    }else if(!password === password2 || password.length < 5){\r\n      dispatch(setError(\"el password debe tener mas de 5 carateres\"))\r\n      Swal.fire('Error', \"el password debe tener mas de 5 carateres\", \"error\")\r\n      return false\r\n    }\r\n    dispatch(removeError())\r\n      return true\r\n   }\r\n\r\n    return (\r\n        <div className='container-1'>\r\n            <Form className=\"container-2\" onSubmit={handleRegister}>\r\n              <h1>Register</h1>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Control type=\"text\" placeholder=\"Enter name\" name=\"name\" value={name} onChange={handleSubmit} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={email} onChange={handleSubmit} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={handleSubmit} />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                  <Form.Control type=\"password\" placeholder=\"Repeat Password\" name=\"password2\" value={password2} onChange={handleSubmit} />\r\n              </Form.Group>\r\n              <Button variant=\"secondary\" type=\"submit\">\r\n                  Registro\r\n              </Button>\r\n             \r\n                \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n\r\n    return ( <\r\n        Route {...rest }\r\n        component = {\r\n            (props) => (\r\n                (isAuthenticated) ?\r\n                < Component {...props }\r\n                /> :\r\n                ( < Redirect to = \"life/auth/login\" / > )\r\n            )\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { getAuth} from 'firebase/auth';\r\nimport { BrowserRouter as Router,\r\n    Switch,\r\n    Redirect} from 'react-router-dom';\r\nimport { Navigation } from '../components/components/Navigation/Navigation';\r\nimport { DashboardScreen } from '../components/screens/dashboard/DashboardScreen';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { AllPicture } from '../components/screens/allPicture/AllPicture';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { LoginScreen } from '../components/screens/auth/login/LoginScreen';\r\nimport { RegisterScreen } from '../components/screens/auth/register/RegisterScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingAllProducts, startLoadingProducts } from '../actions/product';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   const [checking, setChecking] = useState(true);\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const auth = getAuth()\r\n\r\n        auth.onAuthStateChanged((user) => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName,user.photoURL))\r\n                setIsLoggedIn(true)\r\n                dispatch(startLoadingProducts(user.uid))\r\n                dispatch(startLoadingAllProducts())\r\n            }else{\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false)\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return (\r\n            <Spinner size=\"md\" animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <Router>\r\n                <div>\r\n          <Navigation isAuthenticated={isLoggedIn}/>\r\n                <Switch>\r\n                    <PublicRoute path=\"life/auth/login\" isAuthenticated={isLoggedIn} component={LoginScreen}/>\r\n                    <PublicRoute path=\"life/auth/register\" isAuthenticated={isLoggedIn} component={RegisterScreen}/>\r\n                    \r\n                    <PrivateRoute exact isAuthenticated={isLoggedIn} path=\"life/dashboard\" component={DashboardScreen}/>\r\n                    <PrivateRoute exact isAuthenticated={isLoggedIn} path=\"life/\" component={AllPicture} />\r\n\r\n                    <Redirect to=\"life/auth/login\"/>\r\n                </Switch>\r\n                </div>\r\n            </Router>\r\n        \r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    products: [], // esto es lo que se va a mostrar el arreglo de notas\r\n    active: '',\r\n    url: '',\r\n    allProducts: []\r\n}\r\nexport const productReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.productsActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.addUrl:\r\n            return {\r\n                ...state,\r\n                url: action.payload\r\n\r\n            }\r\n\r\n        case types.productsAddNew:\r\n            return {\r\n                ...state,\r\n                products: [action.payload, ...state.products]\r\n            }\r\n\r\n        case types.productsLoad:\r\n            return {\r\n                ...state,\r\n                products: [...action.payload]\r\n            }\r\n        case types.productsAllLoad:\r\n            return {\r\n                ...state,\r\n                allProducts: [...action.payload]\r\n            }\r\n\r\n        case types.productsUpdated:\r\n            return {\r\n                ...state,\r\n                products: state.products.map(\r\n                    product => product.id === action.payload.id ?\r\n                    action.payload.product :\r\n                    product\r\n                )\r\n            }\r\n        case types.productsDelete:\r\n            return {\r\n                ...state,\r\n                active: '',\r\n                products: state.products.filter(product => product !== action.payload)\r\n            }\r\n\r\n        case types.productsLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: '',\r\n                products: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import thunk from \"redux-thunk\";\r\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { productReducer } from \"../reducers/productReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    products: productReducer,\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n                photoURL: action.payload.photoURL\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\nimport {Provider} from 'react-redux';\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <AppRouter/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}